@model InsertAdmin

@{
    ViewBag.Title = "Add Admin";
}




    <form method="post" class="form" enctype="multipart/form-data">
        @Html.ValidationSummary(true)


        @Html.LabelFor(m => m.Photo)
        <div>
            <label class="upload">
                @Html.TextBoxFor(m => m.Photo, new { type = "file", accept = "image/jpeg,image/png", hidden = "" })
                <img src="~/Image/Profile/photo.jpg">
            </label>
        </div>
        @Html.ValidationMessageFor(m => m.Photo)


        @Html.LabelFor(m => m.Username)
        @Html.TextBoxFor(m => m.Username, new { maxlength = 20, autofocus = "" })
        @Html.ValidationMessageFor(m => m.Username)


        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { maxlength = "50", autofocus = "" })
        @Html.ValidationMessageFor(m => m.Name)


        @Html.LabelFor(m => m.PhoneNo)
        @Html.TextBoxFor(m => m.PhoneNo, new { maxlength = "13", placeholder = "xxx-xxxxxxxxx" })
        @Html.ValidationMessageFor(m => m.PhoneNo)


        @Html.LabelFor(m => m.Gender)
        <div>
            <label>@Html.RadioButtonFor(m => m.Gender, "F")Female</label>
            <label>@Html.RadioButtonFor(m => m.Gender, "M")Male</label>
        </div>
        @Html.ValidationMessageFor(m => m.Gender)

        @Html.LabelFor(m => m.Email)
        @Html.TextBoxFor(m => m.Email, new { maxlength = "30" })
        @Html.ValidationMessageFor(m => m.Email)


        @Html.LabelFor(m => m.Password)
        @Html.TextBoxFor(m => m.Password, new { maxlength = "20" })
        @Html.ValidationMessageFor(m => m.Password)


        @Html.LabelFor(m => m.ComfirmPassword)
        @Html.TextBoxFor(m => m.ComfirmPassword, new { maxlength = "20" })
        @Html.ValidationMessageFor(m => m.ComfirmPassword)
        <section>
            <button>Submit</button>
            <button type="reset">Reset</button>
        </section>
    </form>

@section foot {
    <script>

        $.validator.setDefaults({
            ignore: ''
        });

        function validatePhoto(f) {
            let reType = /^image\/(jpeg|png)$/i;
            let reName = /^.+\.(jpg|jpeg|png)$/i;

            return f &&
                f.size <= 1 * 1024 * 1024 &&
                reType.test(f.type) &&
                reName.test(f.name);
        }

        let src = null;

        $('.upload input').change(e => {
            let f = e.target.files[0];
            let img = $(e.target).siblings('img')[0];

            if (!src) src = img.src;

            if (validatePhoto(f)) {
                img.src = URL.createObjectURL(f);
            }
            else {
                img.src = src;
                e.target.value = '';
            }
            $(e.target).valid();
        });
    </script>
}




